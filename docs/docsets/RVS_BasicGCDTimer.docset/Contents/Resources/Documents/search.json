{"Protocols/RVS_BasicGCDTimerDelegate.html#/s:17RVS_BasicGCDTimer0a1_bC8DelegateP05basicC8CallbackyyA2ACF":{"name":"basicGCDTimerCallback(_:)","abstract":"<p>Called periodically, as the GCDTimer repeats (or fires once). This is required.</p>","parent_name":"RVS_BasicGCDTimerDelegate"},"Protocols/RVS_BasicGCDTimerDelegate.html#/s:17RVS_BasicGCDTimer0a1_bC8DelegateP05basicC5ValidyyA2ACF":{"name":"basicGCDTimerValid(_:)","abstract":"<p>This is called after the timer is initially valid (but before the first run). It is optional.</p>","parent_name":"RVS_BasicGCDTimerDelegate"},"Protocols/RVS_BasicGCDTimerDelegate.html#/s:17RVS_BasicGCDTimer0a1_bC8DelegateP05basicC17WillBecomeInvalidyyA2ACF":{"name":"basicGCDTimerWillBecomeInvalid(_:)","abstract":"<p>This is called just before the timer invalidates. It is optional.</p>","parent_name":"RVS_BasicGCDTimerDelegate"},"Protocols/RVS_BasicGCDTimerDelegate.html#/s:17RVS_BasicGCDTimer0a1_bC8DelegateP05basicC7SuspendyyA2ACF":{"name":"basicGCDTimerSuspend(_:)","abstract":"<p>This is called just before the timer invalidates. It is optional.</p>","parent_name":"RVS_BasicGCDTimerDelegate"},"Protocols/RVS_BasicGCDTimerDelegate.html#/s:17RVS_BasicGCDTimer0a1_bC8DelegateP05basicC6ResumeyyA2ACF":{"name":"basicGCDTimerResume(_:)","abstract":"<p>This is called when the timer resumes.</p>","parent_name":"RVS_BasicGCDTimerDelegate"},"Protocols/RVS_BasicGCDTimerDelegate.html":{"name":"RVS_BasicGCDTimerDelegate","abstract":"<p>This is the basic callback protocol for the general-purpose GCD timer class. It has one simple required method, and two optional methods.</p>"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC0a1_bC10Completiona":{"name":"RVS_BasicGCDTimerCompletion","abstract":"<p>This is a completion function that can be used, instead of a delegate.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC10completionyAB_SbtcSgvp":{"name":"completion","abstract":"<p>If we don&rsquo;t have a delegate, we should have a completion.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC21timeIntervalInSecondsSdvp":{"name":"timeIntervalInSeconds","abstract":"<p>This is the time between fires, in seconds.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC20leewayInMillisecondsSivp":{"name":"leewayInMilliseconds","abstract":"<p>This is how much &ldquo;leeway&rdquo; we give the timer, in milliseconds. It is ignored for onlyFireOnce.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC7contextypSgvp":{"name":"context","abstract":"<p>This allows the delegate to add any &ldquo;context&rdquo; data to the instance,</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC5queueSo012OS_dispatch_D0CSgvp":{"name":"queue","abstract":"<p>This is the dispatch queue the timer will use.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC10isWallTimeSbvp":{"name":"isWallTime","abstract":"<p>True, if we are to use the Apple &ldquo;Wall Clock&rdquo; time.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC9isInvalidSbvp":{"name":"isInvalid","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC16isOnlyFiringOnceSbvp":{"name":"isOnlyFiringOnce","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC9isRunningSbvp":{"name":"isRunning","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC8delegateAA0a1_bC8Delegate_pSgvp":{"name":"delegate","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC21timeIntervalInSeconds8delegate06leewayF12Milliseconds12onlyFireOnce7context5queue10isWallTime10completionABSd_AA0a1_bC8Delegate_pSgSiSbypSgSo012OS_dispatch_O0CSgSbyAB_SbtcSgtcfc":{"name":"init(timeIntervalInSeconds:delegate:leewayInMilliseconds:onlyFireOnce:context:queue:isWallTime:completion:)","abstract":"<p>Default constructor</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC_10completionABSd_yAB_Sbtctcfc":{"name":"init(_:completion:)","abstract":"<p>Super-simple initializer (just the time and a completion).","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC6resumeyyF":{"name":"resume()","abstract":"<p>If the timer is not currently running, we resume. If running, nothing happens.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC5pauseyyF":{"name":"pause()","abstract":"<p>If the timer is currently running, we suspend. If not running, nothing happens.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC10invalidateyyF":{"name":"invalidate()","abstract":"<p>This completely nukes the timer. It resets the entire object to default.</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html#/s:17RVS_BasicGCDTimerAAC2eeoiySbAB_ABtFZ":{"name":"==(_:_:)","abstract":"<p>Simple comparison, using the instance UUIDs</p>","parent_name":"RVS_BasicGCDTimer"},"Classes/RVS_BasicGCDTimer.html":{"name":"RVS_BasicGCDTimer","abstract":"<p>This is a general-purpose GCD timer class.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}